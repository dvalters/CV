:numbered:

== Hydrological Modelling with LSDTopoTools: LSDCatchmentModel

.From https://en.wikipedia.org/wiki/The_Land_of_the_Mountain_and_the_Flood[The Land of the Mountain and the Flood]
[quote, Walter Scott, The Lay of the Last Minstrel]
O Caledonia! stern and wild, +
Meet nurse for a poetic child! +
Land of the heath and shaggy wood, +
Land of the mountain and the flood... +


=== What does this model do?

NOTE: **As of February 2016, the erosion components of this model need a bit of bug fixing. So this model is currently suitable for hydrological simulations only. (I.e. river flow, flood innundation etc.)**

It is designed to model shorter term landscape processes and evolution within indivdual catchments. The key features are a hydrologically non-steady state flow routing component. In other words, the model explicity calculates 2D water flow dynamics from rainfall input across the landscape using a simplified version of the shallow water equations. Most other LEMs calculate water fluxes based on some simplified parameterisation involving drainage area. The model timestep is typically much shorter than many LEMs and so while there is theorertically no limit to the length of timescale you wish to simulate, bear in mind that long runs over thousands of years with complex rainfall distributions will take a *long* time. The model was designed with simulating landscape response to individual storms, seasonal changes, with holocene landscape evolution as a suggested upper limit in terms of time scale.

It is designed to simulate individual catchments, with water flowing out at a single edge cell(s), so preparation of your DEM should reflect this requirement. 

==== Why not just use the original, GUI version of CAESAER-Lisflood?

You can do if you want to! If you are happy to run on Windows, and would prefer to use a model in GUI-mode then CAESAR-Lisflood is a good choice for this. This branch of the model is designed to be cross platform, though with an emphasis on running on a linux environment, and hopefully extendable to running on a supercomputer if the resources are available to you. One of the drawbacks to the original model is that you need a dedicated Windows box to do your simulations, you can't send them off to a cluster computer-type facility. (Unless you have a bunch of spare Windows PCs...)

With this version you can also perform topographic analysis within the same LSDTopoTools environment, switching easily between modelling and topographic analysis.

NOTE: This version of the model does not yet implement some of the more specialised features in CAESAR-Lisflood, such as dune modelling, river reach modelling, and so on. If you want those right now, you should go get the original model.

==== How does LSDCatchmentModel fit in with LSDRasterModel?

It should compliment the LSDRasterModel, which is better suited to large-scale, topographic evolution over long geological time periods, and has a much faster implicit solver based on Jean Braun's FastScape algorithm.

==== References
These are the two main references that explain the algorithms in more detail:

Coulthard, T. J., Neal, J. C., Bates, P. D., Ramirez, J., Almeida, G. A., & Hancock, G. R. (2013). *Integrating the LISFLOOD‚ÄêFP 2D hydrodynamic model with the CAESAR model: implications for modelling landscape evolution.* Earth Surface Processes and Landforms, 38(15), 1897-1906.

Bates, P. D., Horritt, M. S., & Fewtrell, T. J. (2010). *A simple inertial formulation of the shallow water equations for efficient two-dimensional flood inundation modelling.* Journal of Hydrology, 387(1), 33-45.

== LSDCatchmentModel: User Guide
The model runs from the command line/terminal/console. You specify the model executable name (CatchmentModel.out) followed by the path name to the parameter file and the parameter file itself. The model will print out updates to the terminal window regularly, keeping you updated to the stage it is at and if there are any errors. The DEM of your catchment must be present in the same folder as your parameter file and must be correctly formatted.

IMPORTANT: Compiling this model requires a compiler that supports the recent C++11 standard. (It uses features of the language not in previous standards). We test our code with *gcc*, it requries gcc version 4.7 or later.  

=== Compilation with the Makefile

[source,cpp]
make -f CatchmentModel.make

=== DEM preparation
Currently, you will have to prepare your own DEM as a separate stage in the workflow. (Using whichever GIS tool you like, or preferably our own software!). The DEM should be set up so that one side of the catchment will act as the flow exit point. If you do not have the intended catchment outlet point touching one of the DEM edges, you will get unrealistic pooling of water and flood the entire catchment. *In other words: There should be no 'NODATA' values between the outlet cell(s) and the edge the DEM file.* This is very important for the model to work correctly. 

NOTE: The model will actually route water flow off *all* edges of the catchment. This might be fine for what you need, but discharge timeseries file

Technically, the DEM doesn't need to be pit-filled, but it may be worthwhile to do so as parts of the model can be sped up when the catchment is in a low-flow or steady-flow state. Again, it depends on your intended usage of the model. 

=== Set up and Parameter File overview
A sample parameter file is provided for the Boscastle floods simulation. This is a 48-hour simulation using a 5m DEM, over a catchment 3km x 5.5km. It will take about 2-3 hours to run on a mid-range Desktop machine. (You can dramatically speed this up by using a coarser DEM.)

In the Parameter file, you'll notice that you can use comments by starting the line with a hash (\#) sign. Parameters themselves take the form:

[source]
paramter_name:     VALUE

Make sure not to change the parameter_name, otherwise the parser will not recognise the name and not load the value. Instead you will get the default value in the header file. **(Yes, I know this is not the best way of ingesting a parameter file, and leaves a lot of chance to human error - I will come up with a better way...)**

===== Input files
As a minimum, you need a *DEM input* file, *paramter file*, and *rainfall data* input file.

Once you are happy with the paramter file, you must run the model with two command line arguments:

[source]
./CatchmentModel.out [PATH TO INPUT FILES] [PARAMETER FILE NAME]

=== Parameter Guide

==== File Information
===== dem_name
The base name of your dem input file. 

NOTE: This is the topmost 'surface' in the model, i.e. the sediment layer. Bedrock DEM is specificed under the `bedrock_data_file` parameter. 

===== dem_read_extension
The file extension of your DEMs (currently has to be same for all DEM supplementary files, sorry)
===== timeseries_save_interval
The model generates a timeseries file that contains data on the total basinwide water and sediment discharges. This timestep (in *minutes* of simulated time) determines how often the timeseries data is generated. More on this file later.

==== Supplementary Files
Supplementary files for other features of the model.
===== hydroindex_file 
This file determines the different areas of rainfall input when using spatially variable rainfall input options.
===== rainfall_data_file
This should be a text file with some rainfall values (for input into the catchment). For uniform rainfall, the file would contain a value for rainfall in mm/time step on each line. Typically mm/hr is used, but any time step can be set. Make sure to set the `rain_data_time_step` paramter below as well!
===== grain_data_file 
(not yet implemented - it would be used to set the starting distribution of grainsizes)
===== bedrock_data_file

==== Numerical    
Parameters that control the numerical model time-stepping etc, and the model run time.
===== min_time_step
Leave at 0.
===== max_time_step
Probably leave at 3600 (seconds), i.e. one hour. You could potentially get model speed up if your increased it, and your rainfall data was at larger intervals than hourly.
===== run_time_start
Leave 0 for now, would be used for restarting runs.
===== max_run_duration
This is the length of the simulation in hours, MINUS 1. I.e. If you are doing a 48hour simulation, this number should be 47..**(Yes, I know this is daft, and I will get round to fixing it at some point)**
===== memory_limit
(ignore this)

==== Sediment
(Sediment is not implemented just yet, check back soon!)
===== transport_law		  
Type either **einstein** or **wilcock** to select your favourite sediment transport law.
===== max_tau_velocity	    
===== active_layer_thickness
===== recirculate_proportion
===== lateral_erosion_on
===== lateral_ero_rate
===== edge_filter_passes
===== cells_shift_lat
===== max_diff_cross_chan
===== erode_limit       

==== Hydrology
Parameters for the hydrological part of the model.
===== TOPMODEL_m_value
As well as the water routing sub-model, LSDCatchmentModel also calculates the discharge based on Beven's TOPMODEL (i.e. discharge approximation based on drainage area and topography. The model contains the infamous **m** parameter, which varies depending on environment. You should consult the literature for appropriate values. Unless you aren't bothered about the TOPMODEL output, in which case leave it at 0.01. 

*From the original  CAESAR-Lisflood documentation*
For catchment mode this is an important variable as it controls the peak and duration of the hydrograph generated by a rain event. It is the same as the 'm' value in TOPMODEL, that CAESAR-lisfloods hydrological model is based on. Typical values for m are from 0.02 (low - meaning low flood peaks and long duration hydrographs) to 0.005 (higher, flashier peaks) and examples of values used can be found in the CAESAR and TOPMODEL literature. 

===== rainfall_data_on
Leave set to 'yes' for now.
===== rain_data_time_step
The time step in minutes. This must match the rainfall input data file timestep!
===== spatial_var_rain
No for uniform rainfall input, yes to use the spatially variable option.
===== in_out_difference
Speeds up the model running, during periods of approximate steady state (in terms of water in vs water out of the outlet point). Set to zero to disallow this feature. Otherwise, give the maximum allowed difference in cumecs. 
===== min_Q_for_depth_calc
This is a threshold above which the model will calculate a flow depth. If this is not set, then it wastes time calculating flow depths of fractions of a mm which will not cause any erosion or deposition. This variable dependent upon grid cell size, and as a guide set this parameter to 0.1 per meter cell size For example a DEM with 10m cell size will have a Min Q of 0.1, and a DTM with 50m cell size will have a Min Q of 0.5. 
===== max_Q_for_depth_calc
This can be important for the hydrological model - which will add water for every cell greater than Min Q - but less than the limit set here. In other words, reducing this value will force water to be added more in the headwaters rather than progressively down through the catchment. 
===== water_depth_erosion_threshold
The model will only calculate erosion above water depths of this value in *metres*.
===== slope_on_edge_cell
The slope for the exit cells on the edges of the model domain. Lisflood-FP requires a slope for these cells in order to calculate a water depth and thus flow out from the model. This is actually quite important in controlling the erosion and deposition that occurs along the far right hand side of the DEM. Set too low and you will get deposition, too high and scour heading back upstream. To set this value, calculate the mean valley floor (near channel) slope for the channel near where it exits. 
===== evaporation_rate
(ignore for now)
===== courant_number
Courant number' is a value that controls the numerical stability and speed of operation of the flow model. More details can be found in Bates et al (2009). It should only range between 0.2 and 0.7. Higher values increase the model time step but are more unstable. Stability and thus values also depends upon the grid cell size. Larger cells (e.g. 20m, 50m+) can take values of 0.7, smaller cells (e.g. 2m) may need the smallest value (0.2). Stability is also linked to the erodelimit value (sediment tab) which controls the amount of sediment that can be eroded or deposited from a cell. Reccomended values are 0.5 for 50m dem, 0.2 for 10m or less. 
===== froude_num_limit
If too much flow is allowed between cells per time step, then this can lead to checkerboarding effects - which can also be controlled by lowering the Courant number above. In addition the model can be set to prevent flows exceeding a froude number (specified in this box) passing between cells. The default value is 0.8 resulting in sub-critical flow - it can be set higher if you like and in many circumstances works fine at 1. You may want to use lower values (e.g the default or possibly even lower) if working with deep flows (including lakes) at fine grid cell resolutions.

Of course restricting the flow according to froude number has the knock on effect of reducing the speed of a flood wave moving through a reach - can also cause raised water depths and can reduce erosion rates. 
===== mannings_n
The Roughness co-efficient used by the water flow model. Look up suitable values here: http://www.fsl.orst.edu/geowater/FX3/help/8_Hydraulic_Reference/Mannings_n_Tables.htm
===== hflow_threshold
This is a parameter in the Lisflood FP flow model. It relates directly to the hflow parameter in papers describing the Lisflood FP model. hflow is the water surface elevation between two cells. A threshold (this value) is usually used to prevent the flow model from trying to move water when there are very small gradients between cells. A good default value is 0.00001 (the units are in m). 
===== num_unique_rain_cells
For spatially variable rainfall mode. The number of different areas of rainfall you are using.

==== Vegetation
===== vegetation_on
===== grass_grow_rate
===== vegetation_crit_shear
===== veg_erosion_prop

==== Hillslope
===== creep_rate	
===== slope_failure_thresh
===== soil_erosion_rate
===== soil_j_mean_depends
===== call_muddpile_model

==== Write Output Rasters
===== raster_output_interval
===== write_waterdepth_file
===== waterdepth_outfile_name
===== write_elev_file








